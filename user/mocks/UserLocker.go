// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	context "context"
	time "time"

	mock "github.com/stretchr/testify/mock"

	uuid "github.com/google/uuid"
)

// UserLocker is an autogenerated mock type for the UserLocker type
type UserLocker struct {
	mock.Mock
}

// LockUser provides a mock function with given fields: ctx, id, until
func (_m *UserLocker) LockUser(ctx context.Context, id uuid.UUID, until time.Time) error {
	ret := _m.Called(ctx, id, until)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, uuid.UUID, time.Time) error); ok {
		r0 = rf(ctx, id, until)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUserLocker interface {
	mock.TestingT
	Cleanup(func())
}

// NewUserLocker creates a new instance of UserLocker. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUserLocker(t mockConstructorTestingTNewUserLocker) *UserLocker {
	mock := &UserLocker{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
