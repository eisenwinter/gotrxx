// Code generated by mockery v2.15.0. DO NOT EDIT.

package mocks

import (
	application "github.com/eisenwinter/gotrxx/application"

	context "context"

	mock "github.com/stretchr/testify/mock"
)

// ApplicationToClientIDMapper is an autogenerated mock type for the ApplicationToClientIDMapper type
type ApplicationToClientIDMapper struct {
	mock.Mock
}

// ApplicationByClientID provides a mock function with given fields: ctx, clientID
func (_m *ApplicationToClientIDMapper) ApplicationByClientID(ctx context.Context, clientID string) (*application.Application, error) {
	ret := _m.Called(ctx, clientID)

	var r0 *application.Application
	if rf, ok := ret.Get(0).(func(context.Context, string) *application.Application); ok {
		r0 = rf(ctx, clientID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*application.Application)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, clientID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewApplicationToClientIDMapper interface {
	mock.TestingT
	Cleanup(func())
}

// NewApplicationToClientIDMapper creates a new instance of ApplicationToClientIDMapper. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewApplicationToClientIDMapper(t mockConstructorTestingTNewApplicationToClientIDMapper) *ApplicationToClientIDMapper {
	mock := &ApplicationToClientIDMapper{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
